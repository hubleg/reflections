What happens when you initialize a repository? Why do you need to do it?
  Git creates the necessary metadata so it can keep track of the commits/changes I make to the files in that repository. Without this initialization, git would not know what/where to track the versions.

How is the staging area different from the working directory and the repository? What value do you think it offers?
  Staging area files are waiting to be committed, whereas files in working directory are still just like any file, it can be moved deleted etc. Staging area is part of the repository, a special area in it. Staging area allows to move bunch of files as commits to the repository.

How can you use the staging area to make sure you have one commit per logical change?
  I only add one file at a time to staging, then diff the working directory and staging area to make sure I only have the desired change in the file to be committed.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
  When you want to try out different things on your project, branches are helpful as they isolate the tryout from functional code. With branches you can take many different angles to the development work.

How do the diagrams help you visualize the branch structure?
  Diagrams show all the branches, which give me a better idea what has been done thus far, especially if the branch names are descriptive.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
  After merging, there's only one branch (master), which includes all the changes made in the different branches. It is visualized in the manner that it is to indicate that a branch was merged into the master.