When would you want to use a remote repository rather than keeping all your work
local?

    When you cooperate with many people on a project, remote repository would be very useful.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I should decide which changes are worthy of pulling. GitHub has no idea when it's the right time to pull something.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork is a concept in GitHub for cloning someone's repository. Fork keeps the original repository intact and credit's the original owner, but in essence it is cloning. Fork only works inside GitHub. Cloning copies a repository to a desired location. Branching is like cloning but within a repository. Branches can be merged back to master, whereas clones/fork cannot(?).

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can compare what others have done since your own last changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    One could decide to mimic git/github behaviour by organizing different folders as git-like repositories and agreeing a way of working. Or, one could use svn or whatever other code-sharing repositories there are. Either way, it would be much harder to avoid conflict/bugs and way more time consuming to work with other solutions when compared to git. It might be easier to share your work with others without using git/github, but tracking the changes/staying on top of changes would be harder.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
